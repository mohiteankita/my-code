CREATE TABLE STUDENT
(
    STUDENT_ID INT,
	NAME VARCHAR(299),
	AGE INT
)

ALTER TABLE STUDENT ADD ADDRESS VARCHAR(200)

ALTER TABLE STUDENT ADD FATHER_NAME VARCHAR(100), MOTHER_NAME VARCHAR(100)

SELECT * FROM STUDENT

ALTER TABLE STUDENT ADD DOB DATE DEFAULT '01-JAN-99'

ALTER TABLE STUDENT DROP COLUMN ADDRESS

TRUNCATE TABLE STUDENT

INSERT INTO STUDENT VALUES(1,'ANITA', 23, 'GANESH', 'MEENA', '01-MAY-98')

INSERT INTO STUDENT(STUDENT_ID, NAME, AGE, FATHER_NAME, MOTHER_NAME) VALUES (2, 'ANKITA', 23, 'GOVIND', 'SUVARNA')

DROP TABLE STUDENT

CREATE DATABASE DBS

DROP DATABASE DBS

ALTER TABLE STUDENT DROP COLUMN FATHER_NAME
ALTER TABLE STUDENT DROP COLUMN MOTHER_NAME

SELECT * FROM STUDENT

INSERT INTO STUDENT(STUDENT_ID, NAME) VALUES(3,'ALEX')

INSERT INTO STUDENT VALUES(4,'DEV', DEFAULT, '2-APRIL-97')

UPDATE STUDENT SET AGE=24 WHERE STUDENT_ID=2

UPDATE STUDENT SET NAME='AMIT', AGE=25 WHERE STUDENT_ID=3

UPDATE STUDENT SET AGE=AGE+1

DELETE FROM STUDENT

INSERT INTO STUDENT VALUES(5,'ABHAY', 32, '03-DEC-2012')

DELETE FROM STUDENT WHERE STUDENT_ID=5

SELECT * FROM STUDENT ORDER BY STUDENT_ID 

SELECT * FROM STUDENT ORDER BY STUDENT_ID DESC

ALTER TABLE STUDENT ADD COURSE VARCHAR(100) DEFAULT 'MSC MATHS'

INSERT INTO STUDENT(STUDENT_ID, NAME, AGE) VALUES(6, 'RHINA', 23)

INSERT INTO STUDENT(STUDENT_ID, NAME, AGE) VALUES(7, 'PRIYA', 21)

INSERT INTO STUDENT VALUES(7, 'RHINA', 23, '3-FEB-2021', 'BE MECHANICAL')

INSERT INTO STUDENT VALUES(7, 'REVATI', 23, '7-JUL-2021', 'MSC MATHS')

INSERT INTO STUDENT VALUES(9, 'RAJ', 28, '3-MAR-2020', 'BE MECHANICAL')

UPDATE STUDENT SET STUDENT_ID=11 WHERE NAME='PRIYA'

DELETE FROM STUDENT WHERE STUDENT_ID=11

SELECT * FROM STUDENT

SELECT COUNT(STUDENT_ID), COURSE FROM STUDENT GROUP BY COURSE

CREATE TABLE EMPLOYEE
(
EID INT PRIMARY KEY,
NAME VARCHAR(200) NOT NULL,
AGE INT,
SALARY INT 
)

INSERT INTO EMPLOYEE VALUES(401, 'ANU', 22, 9000),
                            (402, 'ROHAN', 29, 8000),
							(403, 'SHANE', 34, 6000),
							(404, 'SCOTT', 44, 9000),
							(405, 'TIGER', 35, 8000)

SELECT * FROM EMPLOYEE

SELECT COUNT(EID), SALARY FROM EMPLOYEE GROUP BY SALARY

SELECT COUNT(EID), SALARY FROM EMPLOYEE WHERE SALARY > 6000 GROUP BY SALARY 

SELECT COUNT(EID), SALARY FROM EMPLOYEE GROUP BY SALARY HAVING SALARY > 6000 

SELECT DISTINCT(SALARY) FROM EMPLOYEE

SELECT DISTINCT SALARY FROM EMPLOYEE

CREATE TABLE ANIMAL
(
  ID INT,
  NAME VARCHAR(200)
)

SELECT * FROM ANIMAL

CREATE TABLE FOOD
(
ID INT,
FOOD_NAME VARCHAR(200)
)

SELECT * FROM FOOD
SELECT * FROM ANIMAL

ALTER TABLE ANIMAL
ALTER COLUMN ID INT NOT NULL

ALTER TABLE ANIMAL
ADD CONSTRAINT PRI_KEY PRIMARY KEY(ID)

ALTER TABLE FOOD
ALTER COLUMN ID INT NOT NULL

ALTER TABLE FOOD
ADD CONSTRAINT PR_KEY PRIMARY KEY(ID)

ALTER TABLE ANIMAL 
ADD FOOD_ID INT 

ALTER TABLE ANIMAL
ADD CONSTRAINT FK_KEY FOREIGN KEY(FOOD_ID) REFERENCES FOOD(ID)

ALTER TABLE FOOD
ADD CONSTRAINT CHK CHECK(FOOD_NAME != 'GRASS')

INSERT INTO FOOD VALUES(1, 'GREEN GRASS')
INSERT INTO FOOD VALUES(2, 'NEEM TREE LEAVES')

SELECT * FROM ANIMAL
SELECT * FROM FOOD

INSERT INTO ANIMAL VALUES(101, 'GOAT', 1)
INSERT INTO ANIMAL(ID, NAME) VALUES(102, 'GOAT')
INSERT INTO ANIMAL VALUES(103, 'SHEEP', 1)
INSERT INTO ANIMAL VALUES(104, 'OX', 2)

UPDATE ANIMAL SET NAME='BUFFALO' WHERE ID=101

--CROSS JOIN OR CARTESION PRODUCT->EACH ROW FROM FIRST TABLE COMBINES WITH EACH ROW OF SECOND TABLE
SELECT * FROM ANIMAL CROSS JOIN FOOD

SELECT * FROM ANIMAL, FOOD

INSERT INTO FOOD VALUES(3, 'MANGO LEAVES')
--INNER JOIN-> RESULT IS BASED ON MATCHED DATA


SELECT NAME, FOOD_NAME FROM ANIMAL AS A JOIN FOOD F ON A.FOOD_ID=F.ID

SELECT * FROM ANIMAL JOIN FOOD ON ANIMAL.FOOD_ID=FOOD.ID

--OUTER JOIN
--1.LEFT OUTER JOIN->THE RESULTSET TABLE WITH MATCHED DATA FROM THE TWO TABLES AND THEN THE REMAINING ROWS OF LEFT TABLE AND NULL FROM THE RIGHT TABLES COLUMNS

SELECT NAME, FOOD_NAME FROM ANIMAL LEFT OUTER JOIN FOOD ON ANIMAL.FOOD_ID=FOOD.ID

SELECT * FROM ANIMAL LEFT OUTER JOIN FOOD ON ANIMAL.FOOD_ID=FOOD.ID

--2.RIGHT OUTER JOIN
SELECT NAME, FOOD_NAME FROM ANIMAL RIGHT OUTER JOIN FOOD ON ANIMAL.FOOD_ID=FOOD.ID

SELECT * FROM ANIMAL RIGHT OUTER JOIN FOOD ON ANIMAL.FOOD_ID=FOOD.ID

INSERT INTO ANIMAL(ID,NAME) VALUES(105,'TIGER')

--FULL OUTER JOIN
SELECT * FROM ANIMAL FULL OUTER JOIN FOOD ON ANIMAL.FOOD_ID=FOOD.ID
SELECT NAME, FOOD_NAME FROM ANIMAL FULL OUTER JOIN FOOD ON ANIMAL.FOOD_ID=FOOD.ID
